{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\jatos_win_java\\\\study_assets_root\\\\Custom Website\\\\user-website\\\\src\\\\FormSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\n/*\r\nWhen importing the default variables from the parameters, must add export to them so another file (like this one) \r\ncan grab the info. Also for this file because i copied the other files away from where their supposed to be\r\ni had to comment out some their code to make them not have errors (mostly the add and push code)\r\n\r\n*/\n\nimport { StroopWord_Default } from \"./configFiles/StroopWord_Setup\";\nimport { StroopColorWord_Default } from \"./configFiles/StroopColorWord_Setup\";\nimport { StroopColor_Default } from \"./configFiles/StroopColor_Setup\";\nimport { IntakeForm } from \"./configFiles/IntakeForm_Setup\";\n//RAVLT? which file\n//Ravlt? which file? Same file?\n//Cardsort no config\nimport { PatternComparison_Default } from \"./configFiles/PatternComparison_Setup\";\nimport { Cancellation_Default } from \"./configFiles/Cancellation_Setup\";\n//Cube copy vs clock/cube draw? Same File?\nimport { MatrixReasoning_Default } from \"./configFiles/MatrixReasoning_Setup\";\n//DSforward and backward both use digitalSpan file?\n//Assume Trail a and b use same\nimport { TrailMakingA_Default } from \"./configFiles/TrailMaking_Setup\";\nimport { TrailMakingB_Default } from \"./configFiles/TrailMaking_Setup\";\n// import {} from \"./configFiles/\";\n// import {} from \"./configFiles/\";\n// import {} from \"./configFiles/\";\n\n//--------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormSettings({\n  selectedItems,\n  saveFormSettings\n}) {\n  _s();\n  const {\n    formName,\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Select the correct default configuration based on the form name\n  const getDefaultConfig = formName => {\n    switch (formName) {\n      case \"Word\":\n        return StroopWord_Default;\n      case \"Color\":\n        return StroopColor_Default;\n      case \"ColorWord\":\n        return StroopColorWord_Default;\n      case \"Intake Form\":\n        return IntakeForm;\n      case \"Pattern comparison\":\n        return PatternComparison_Default;\n      case \"Cancellation\":\n        return Cancellation_Default;\n      case \"Matrix reas\":\n        return MatrixReasoning_Default;\n      // case \"Intake Form\":\n      //   return IntakeForm;\n\n      default:\n        return {};\n    }\n  };\n\n  // Set the default configuration as initial data\n  const defaultSettings = getDefaultConfig(formName);\n  const initialData = {\n    id,\n    name: formName,\n    settings: defaultSettings\n  };\n  const [formData, setFormData] = useState(initialData);\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      settings: {\n        ...formData.settings,\n        [name]: type === \"checkbox\" ? checked : value\n      }\n    });\n  };\n  const handleSave = () => {\n    saveFormSettings(formData);\n    navigate(\"/\");\n  };\n  const renderFormFields = () => {\n    return Object.entries(formData.settings).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [typeof value === \"boolean\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: key,\n          value: formData.settings[key] ? \"true\" : \"false\",\n          onChange: e => handleChange({\n            target: {\n              name: key,\n              value: e.target.value === \"true\",\n              type: \"checkbox\"\n            }\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : typeof value === \"number\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: key,\n          value: formData.settings[key],\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : Array.isArray(value) ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \" (comma-separated values):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: key,\n          value: formData.settings[key].join(\", \"),\n          onChange: e => handleChange({\n            target: {\n              name: key,\n              value: e.target.value.split(\",\").map(val => val.trim())\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: key,\n          value: formData.settings[key] || \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [formName, \" Settings\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), renderFormFields(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(FormSettings, \"gbIcUHaf6PLJdKqXX4+Kav/7utU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FormSettings;\nexport default FormSettings;\nvar _c;\n$RefreshReg$(_c, \"FormSettings\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","StroopWord_Default","StroopColorWord_Default","StroopColor_Default","IntakeForm","PatternComparison_Default","Cancellation_Default","MatrixReasoning_Default","TrailMakingA_Default","TrailMakingB_Default","jsxDEV","_jsxDEV","FormSettings","selectedItems","saveFormSettings","_s","formName","id","navigate","getDefaultConfig","defaultSettings","initialData","name","settings","formData","setFormData","handleChange","e","value","type","checked","target","handleSave","renderFormFields","Object","entries","map","key","style","marginBottom","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","join","split","val","trim","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/jatos_win_java/study_assets_root/Custom Website/user-website/src/FormSettings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n/*\r\nWhen importing the default variables from the parameters, must add export to them so another file (like this one) \r\ncan grab the info. Also for this file because i copied the other files away from where their supposed to be\r\ni had to comment out some their code to make them not have errors (mostly the add and push code)\r\n\r\n*/\r\n\r\n\r\nimport {StroopWord_Default} from \"./configFiles/StroopWord_Setup\";\r\nimport {StroopColorWord_Default} from \"./configFiles/StroopColorWord_Setup\";\r\nimport {StroopColor_Default} from \"./configFiles/StroopColor_Setup\";\r\nimport {IntakeForm} from \"./configFiles/IntakeForm_Setup\";\r\n//RAVLT? which file\r\n//Ravlt? which file? Same file?\r\n//Cardsort no config\r\nimport {PatternComparison_Default} from \"./configFiles/PatternComparison_Setup\";\r\nimport {Cancellation_Default} from \"./configFiles/Cancellation_Setup\";\r\n//Cube copy vs clock/cube draw? Same File?\r\nimport {MatrixReasoning_Default} from \"./configFiles/MatrixReasoning_Setup\";\r\n//DSforward and backward both use digitalSpan file?\r\n//Assume Trail a and b use same\r\nimport {TrailMakingA_Default} from \"./configFiles/TrailMaking_Setup\";\r\nimport {TrailMakingB_Default} from \"./configFiles/TrailMaking_Setup\";\r\n// import {} from \"./configFiles/\";\r\n// import {} from \"./configFiles/\";\r\n// import {} from \"./configFiles/\";\r\n\r\n\r\n\r\n\r\n//--------------------------------------------------------------\r\nfunction FormSettings({ selectedItems, saveFormSettings }) {\r\n  const { formName, id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // Select the correct default configuration based on the form name\r\n  const getDefaultConfig = (formName) => {\r\n    switch (formName) {\r\n      case \"Word\":\r\n        return StroopWord_Default;\r\n      case \"Color\":\r\n        return StroopColor_Default;\r\n      case \"ColorWord\":\r\n        return StroopColorWord_Default;\r\n      case \"Intake Form\":\r\n        return IntakeForm;\r\n      case \"Pattern comparison\":\r\n        return PatternComparison_Default;\r\n      case \"Cancellation\":\r\n        return Cancellation_Default;\r\n      case \"Matrix reas\":\r\n        return MatrixReasoning_Default;\r\n      // case \"Intake Form\":\r\n      //   return IntakeForm;\r\n                          \r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // Set the default configuration as initial data\r\n  const defaultSettings = getDefaultConfig(formName);\r\n  const initialData = { id, name: formName, settings: defaultSettings };\r\n\r\n  const [formData, setFormData] = useState(initialData);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      settings: {\r\n        ...formData.settings,\r\n        [name]: type === \"checkbox\" ? checked : value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    saveFormSettings(formData);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const renderFormFields = () => {\r\n    return Object.entries(formData.settings).map(([key, value]) => (\r\n      <div key={key} style={{ marginBottom: '10px' }}>\r\n        {typeof value === \"boolean\" ? (\r\n          <label>\r\n            {key}:\r\n            <select\r\n              name={key}\r\n              value={formData.settings[key] ? \"true\" : \"false\"}\r\n              onChange={(e) =>\r\n                handleChange({\r\n                  target: { name: key, value: e.target.value === \"true\", type: \"checkbox\" },\r\n                })\r\n              }\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </label>\r\n        ) : typeof value === \"number\" ? (\r\n          <label>\r\n            {key}:\r\n            <input\r\n              type=\"number\"\r\n              name={key}\r\n              value={formData.settings[key]}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        ) : Array.isArray(value) ? (\r\n          <label>\r\n            {key} (comma-separated values):\r\n            <textarea\r\n              name={key}\r\n              value={formData.settings[key].join(\", \")}\r\n              onChange={(e) =>\r\n                handleChange({\r\n                  target: { name: key, value: e.target.value.split(\",\").map((val) => val.trim()) },\r\n                })\r\n              }\r\n            />\r\n          </label>\r\n        ) : (\r\n          <label>\r\n            {key}:\r\n            <input\r\n              type=\"text\"\r\n              name={key}\r\n              value={formData.settings[key] || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        )}\r\n        <br />\r\n      </div>\r\n    ));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"form-settings\">\r\n      <h2>{formName} Settings</h2>\r\n      {renderFormFields()}\r\n      <br />\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}