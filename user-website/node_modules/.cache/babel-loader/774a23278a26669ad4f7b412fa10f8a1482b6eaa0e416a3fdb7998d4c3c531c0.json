{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\jatos_win_java\\\\study_assets_root\\\\Custom Website\\\\Website\\\\user-website\\\\src\\\\FormSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { StroopWord_Default } from \"./configFiles/StroopWord_Setup\";\nimport { StroopColorWord_Default } from \"./configFiles/StroopColorWord_Setup\";\nimport { StroopColor_Default } from \"./configFiles/StroopColor_Setup\";\nimport { IntakeForm } from \"./configFiles/IntakeForm_Setup\";\nimport { PatternComparison_Default } from \"./configFiles/PatternComparison_Setup\";\nimport { Cancellation_Default } from \"./configFiles/Cancellation_Setup\";\nimport { MatrixReasoning_Default } from \"./configFiles/MatrixReasoning_Setup\";\nimport { TrailMakingA_Default, TrailMakingB_Default } from \"./configFiles/TrailMaking_Setup\";\nimport { SerialSubtract_Default } from \"./configFiles/SerialSubtraction_Setup\";\nimport { vDMS_Default } from \"./configFiles/vDMS_setup\";\nimport { SpatialDMS_Default } from \"./configFiles/SpatialDMS_setup\";\nimport { RAVLT_Default } from \"./configFiles/WordRecall_Setup\";\nimport { WordRecog_Default } from \"./configFiles/WordRecog_Setup\";\nimport { ImageCopy_Default } from \"./configFiles/ImageCopy_Setup\";\nimport { Questionnaire_default } from \"./configFiles/Questionnaire_Setup\"; //Create new default with dropdown options\n// import {} from \"./configFiles/\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormSettings({\n  saveFormSettings\n}) {\n  _s();\n  const {\n    formName,\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  //Have to make each default variable \"export var/const\" in the config files, \n  //some variables in config files needed to be commented out because they didnt have the var/const\n  const getDefaultConfig = formName => {\n    //Switch case / If statement to collect the parameters/default values of\n    //the according form that was clicked\n    switch (formName) {\n      case \"Word\":\n        return StroopWord_Default;\n      case \"Color\":\n        return StroopColor_Default;\n      case \"ColorWord\":\n        return StroopColorWord_Default;\n      case \"Intake Form\":\n        return IntakeForm;\n      case \"RAVLT, imm (Spoken)\":\n        //double check word\n        return RAVLT_Default;\n      case \"RAVLT, Recog\":\n        //Double check word\n        return WordRecog_Default;\n      //Card sort no default      \n      case \"Pattern comparison\":\n        return PatternComparison_Default;\n      case \"Cancellation\":\n        return Cancellation_Default;\n      //Cube draw and copy  Image copy file\n      case \"Matrix reas\":\n        return MatrixReasoning_Default;\n      // Digital span defualt contains variable with more paramater which causes issues when reading\n      //TrailsA and B default both have more variables within which makes it harder to read\n      case \"Subtract\":\n        return SerialSubtract_Default;\n      case \"Verbal DMS\":\n        return vDMS_Default;\n      case \"Spatial DMS\":\n        return SpatialDMS_Default;\n      case \"Questionnaire\":\n        return Questionnaire_default;\n      // \"STAI-T\" Which? questionnaire form, ignore criteria and variable, Questionnaire dropdown of options, add default in quesstionnare setup\n      // \"STAI-S\" Combine these three into one questionnare button\n      // \"BDI\"   \n\n      default:\n        return {};\n    }\n  };\n  const defaultSettings = getDefaultConfig(formName);\n  const savedSettings = JSON.parse(localStorage.getItem(`${formName}-${id}`)) || {};\n  const initialData = {\n    id,\n    name: formName,\n    settings: {\n      ...defaultSettings,\n      ...savedSettings\n    }\n  };\n  const [formData, setFormData] = useState(initialData);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const fieldType = typeof formData.settings[name];\n    setFormData({\n      ...formData,\n      settings: {\n        ...formData.settings,\n        [name]: fieldType === \"boolean\" ? value === \"true\" : fieldType === \"number\" ? parseFloat(value) : value\n      }\n    });\n  };\n  const handleSave = () => {\n    localStorage.setItem(`${formName}-${id}`, JSON.stringify(formData.settings));\n    saveFormSettings(formData);\n    navigate(\"/\");\n  };\n  const renderFormFields = () => {\n    return Object.entries(formData.settings).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [typeof value === \"boolean\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: key,\n          value: formData.settings[key] ? \"true\" : \"false\",\n          onChange: e => handleChange({\n            target: {\n              name: key,\n              value: e.target.value\n            }\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : typeof value === \"number\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: key,\n          value: formData.settings[key],\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : Array.isArray(value) ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: key,\n          value: formData.settings[key],\n          onChange: e => handleChange({\n            target: {\n              name: key,\n              value: e.target.value\n            }\n          }),\n          children: value.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: key,\n          value: formData.settings[key] || \"\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [formName, \" Settings\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), renderFormFields(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(FormSettings, \"gbIcUHaf6PLJdKqXX4+Kav/7utU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FormSettings;\nexport default FormSettings;\nvar _c;\n$RefreshReg$(_c, \"FormSettings\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","StroopWord_Default","StroopColorWord_Default","StroopColor_Default","IntakeForm","PatternComparison_Default","Cancellation_Default","MatrixReasoning_Default","TrailMakingA_Default","TrailMakingB_Default","SerialSubtract_Default","vDMS_Default","SpatialDMS_Default","RAVLT_Default","WordRecog_Default","ImageCopy_Default","Questionnaire_default","jsxDEV","_jsxDEV","FormSettings","saveFormSettings","_s","formName","id","navigate","getDefaultConfig","defaultSettings","savedSettings","JSON","parse","localStorage","getItem","initialData","name","settings","formData","setFormData","handleChange","e","value","target","fieldType","parseFloat","handleSave","setItem","stringify","renderFormFields","Object","entries","map","key","style","marginBottom","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","Array","isArray","option","index","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/jatos_win_java/study_assets_root/Custom Website/Website/user-website/src/FormSettings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nimport { StroopWord_Default } from \"./configFiles/StroopWord_Setup\";\r\nimport { StroopColorWord_Default } from \"./configFiles/StroopColorWord_Setup\";\r\nimport { StroopColor_Default } from \"./configFiles/StroopColor_Setup\";\r\nimport { IntakeForm } from \"./configFiles/IntakeForm_Setup\";\r\nimport { PatternComparison_Default } from \"./configFiles/PatternComparison_Setup\";\r\nimport { Cancellation_Default } from \"./configFiles/Cancellation_Setup\";\r\nimport { MatrixReasoning_Default } from \"./configFiles/MatrixReasoning_Setup\";\r\nimport { TrailMakingA_Default, TrailMakingB_Default } from \"./configFiles/TrailMaking_Setup\";\r\nimport {SerialSubtract_Default} from \"./configFiles/SerialSubtraction_Setup\"\r\nimport {vDMS_Default} from \"./configFiles/vDMS_setup\"\r\nimport {SpatialDMS_Default} from \"./configFiles/SpatialDMS_setup\"  \r\nimport {RAVLT_Default} from \"./configFiles/WordRecall_Setup\"\r\nimport {WordRecog_Default} from \"./configFiles/WordRecog_Setup\"\r\nimport {ImageCopy_Default} from \"./configFiles/ImageCopy_Setup\"\r\nimport {Questionnaire_default} from \"./configFiles/Questionnaire_Setup\" //Create new default with dropdown options\r\n// import {} from \"./configFiles/\"\r\n \r\nfunction FormSettings({ saveFormSettings }) {\r\n  const { formName, id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  //Have to make each default variable \"export var/const\" in the config files, \r\n  //some variables in config files needed to be commented out because they didnt have the var/const\r\n  const getDefaultConfig = (formName) => {\r\n\r\n    //Switch case / If statement to collect the parameters/default values of\r\n    //the according form that was clicked\r\n    switch (formName) {\r\n      case \"Word\":\r\n        return StroopWord_Default;\r\n      case \"Color\":\r\n        return StroopColor_Default;\r\n      case \"ColorWord\":\r\n        return StroopColorWord_Default;\r\n      case \"Intake Form\":\r\n        return IntakeForm;\r\n      case \"RAVLT, imm (Spoken)\": //double check word\r\n        return RAVLT_Default;\r\n      case \"RAVLT, Recog\": //Double check word\r\n        return WordRecog_Default;\r\n//Card sort no default      \r\n      case \"Pattern comparison\":\r\n        return PatternComparison_Default;\r\n      case \"Cancellation\":\r\n        return Cancellation_Default;\r\n        //Cube draw and copy  Image copy file\r\n      case \"Matrix reas\":\r\n        return MatrixReasoning_Default;\r\n// Digital span defualt contains variable with more paramater which causes issues when reading\r\n//TrailsA and B default both have more variables within which makes it harder to read\r\n      case \"Subtract\":\r\n        return SerialSubtract_Default;\r\n      case \"Verbal DMS\":\r\n        return vDMS_Default;\r\n      case \"Spatial DMS\": \r\n        return SpatialDMS_Default;\r\n      case \"Questionnaire\":\r\n        return Questionnaire_default; \r\n      // \"STAI-T\" Which? questionnaire form, ignore criteria and variable, Questionnaire dropdown of options, add default in quesstionnare setup\r\n      // \"STAI-S\" Combine these three into one questionnare button\r\n      // \"BDI\"   \r\n\r\n\r\n      default:\r\n        return {};\r\n    }\r\n  }; \r\n\r\n  const defaultSettings = getDefaultConfig(formName);\r\n  const savedSettings = JSON.parse(localStorage.getItem(`${formName}-${id}`)) || {};\r\n  const initialData = { id, name: formName, settings: { ...defaultSettings, ...savedSettings } };\r\n\r\n  const [formData, setFormData] = useState(initialData);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const fieldType = typeof formData.settings[name];\r\n\r\n    setFormData({\r\n      ...formData,\r\n      settings: {\r\n        ...formData.settings,\r\n        [name]:\r\n          fieldType === \"boolean\"\r\n            ? value === \"true\"\r\n            : fieldType === \"number\"\r\n            ? parseFloat(value)\r\n            : value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    localStorage.setItem(`${formName}-${id}`, JSON.stringify(formData.settings));\r\n    saveFormSettings(formData);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const renderFormFields = () => {\r\n    return Object.entries(formData.settings).map(([key, value]) => (\r\n      <div key={key} style={{ marginBottom: \"10px\" }}>\r\n        {typeof value === \"boolean\" ? (\r\n          <label>\r\n            {key}:\r\n            <select\r\n              name={key}\r\n              value={formData.settings[key] ? \"true\" : \"false\"}\r\n              onChange={(e) =>\r\n                handleChange({\r\n                  target: { name: key, value: e.target.value },\r\n                })\r\n              }\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </label>\r\n        ) : typeof value === \"number\" ? (\r\n          <label>\r\n            {key}:\r\n            <input\r\n              type=\"number\"\r\n              name={key}\r\n              value={formData.settings[key]}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        ) : Array.isArray(value) ? (\r\n          <label>\r\n            {key}:\r\n            <select\r\n              name={key}\r\n              value={formData.settings[key]}\r\n              onChange={(e) =>\r\n                handleChange({\r\n                  target: { name: key, value: e.target.value },\r\n                })\r\n              }\r\n            >\r\n              {value.map((option, index) => (\r\n                <option key={index} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n        ) : (\r\n          <label>\r\n            {key}:\r\n            <input\r\n              type=\"text\"\r\n              name={key}\r\n              value={formData.settings[key] || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        )}\r\n        <br />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"form-settings\">\r\n      <h2>{formName} Settings</h2>\r\n      {renderFormFields()}\r\n      <br />\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSettings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}