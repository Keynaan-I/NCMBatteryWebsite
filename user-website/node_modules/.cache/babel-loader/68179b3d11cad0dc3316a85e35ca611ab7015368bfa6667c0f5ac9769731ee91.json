{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\jatos_win_java\\\\study_assets_root\\\\Custom Website\\\\user-website\\\\src\\\\FormSettings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { StroopWord_Default } from \"./configFiles/StroopWord_Setup\";\nimport { StroopColorWord_Default } from \"./configFiles/StroopColorWord_Setup\";\nimport { StroopColor_Default } from \"./configFiles/StroopColor_Setup\";\nimport { IntakeForm } from \"./configFiles/IntakeForm_Setup\";\n\n//--------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormSettings({\n  selectedItems,\n  saveFormSettings\n}) {\n  _s();\n  const {\n    formName,\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Select the correct default configuration based on the form name\n  const getDefaultConfig = formName => {\n    switch (formName) {\n      case \"Word\":\n        return StroopWord_Default;\n      case \"Color\":\n        return StroopColor_Default;\n      case \"Intake Form\":\n        return IntakeForm;\n      default:\n        return {};\n    }\n  };\n\n  // Set the default configuration as initial data\n  const defaultSettings = getDefaultConfig(formName);\n  const initialData = {\n    id,\n    name: formName,\n    settings: defaultSettings\n  };\n  const [formData, setFormData] = useState(initialData);\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      settings: {\n        ...formData.settings,\n        [name]: type === \"checkbox\" ? checked : value\n      }\n    });\n  };\n  const handleSave = () => {\n    saveFormSettings(formData);\n    navigate(\"/\");\n  };\n  const renderFormFields = () => {\n    return Object.entries(formData.settings).map(([key, value]) => {\n      /*#__PURE__*/_jsxDEV(\"break\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this);\n      if (typeof value === \"boolean\") {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [key, \":\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: key,\n            value: formData.settings[key] ? \"true\" : \"false\",\n            onChange: e => handleChange({\n              target: {\n                name: key,\n                value: e.target.value === \"true\",\n                type: \"checkbox\"\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this);\n      } else if (typeof value === \"number\") {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [key, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: key,\n            value: formData.settings[key],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      } else if (Array.isArray(value)) {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [key, \" (comma-separated values):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: key,\n            value: formData.settings[key].join(\", \"),\n            onChange: e => handleChange({\n              target: {\n                name: key,\n                value: e.target.value.split(\",\").map(val => val.trim())\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [key, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: key,\n            value: formData.settings[key] || \"\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [formName, \" Settings\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), renderFormFields(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(FormSettings, \"gbIcUHaf6PLJdKqXX4+Kav/7utU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FormSettings;\nexport default FormSettings;\nvar _c;\n$RefreshReg$(_c, \"FormSettings\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","StroopWord_Default","StroopColorWord_Default","StroopColor_Default","IntakeForm","jsxDEV","_jsxDEV","FormSettings","selectedItems","saveFormSettings","_s","formName","id","navigate","getDefaultConfig","defaultSettings","initialData","name","settings","formData","setFormData","handleChange","e","value","type","checked","target","handleSave","renderFormFields","Object","entries","map","key","fileName","_jsxFileName","lineNumber","columnNumber","children","onChange","Array","isArray","join","split","val","trim","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/jatos_win_java/study_assets_root/Custom Website/user-website/src/FormSettings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {StroopWord_Default} from \"./configFiles/StroopWord_Setup\";\r\nimport {StroopColorWord_Default} from \"./configFiles/StroopColorWord_Setup\";\r\nimport {StroopColor_Default} from \"./configFiles/StroopColor_Setup\";\r\nimport {IntakeForm} from \"./configFiles/IntakeForm_Setup\";\r\n\r\n\r\n\r\n\r\n//--------------------------------------------------------------\r\nfunction FormSettings({ selectedItems, saveFormSettings }) {\r\n  const { formName, id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // Select the correct default configuration based on the form name\r\n  const getDefaultConfig = (formName) => {\r\n    switch (formName) {\r\n      case \"Word\":\r\n        return StroopWord_Default;\r\n      case \"Color\":\r\n        return StroopColor_Default;\r\n      case \"Intake Form\":\r\n        return IntakeForm;\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // Set the default configuration as initial data\r\n  const defaultSettings = getDefaultConfig(formName);\r\n  const initialData = { id, name: formName, settings: defaultSettings };\r\n\r\n  const [formData, setFormData] = useState(initialData);\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      settings: {\r\n        ...formData.settings,\r\n        [name]: type === \"checkbox\" ? checked : value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    saveFormSettings(formData);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const renderFormFields = () => {\r\n    return Object.entries(formData.settings).map(([key, value]) => {\r\n      <break></break>\r\n      if (typeof value === \"boolean\") {\r\n        return (\r\n          <label key={key}>\r\n            {key}:\r\n            <select\r\n              name={key}\r\n              value={formData.settings[key] ? \"true\" : \"false\"}\r\n              onChange={(e) =>\r\n                handleChange({\r\n                  target: { name: key, value: e.target.value === \"true\", type: \"checkbox\" },\r\n                })\r\n              }\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </label>\r\n        );\r\n      } else if (typeof value === \"number\") {\r\n        return (\r\n          <label key={key}>\r\n            {key}:\r\n            <input\r\n              type=\"number\"\r\n              name={key}\r\n              value={formData.settings[key]}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        );\r\n      } else if (Array.isArray(value)) {\r\n        return (\r\n          <label key={key}>\r\n            {key} (comma-separated values):\r\n            <textarea\r\n              name={key}\r\n              value={formData.settings[key].join(\", \")}\r\n              onChange={(e) =>\r\n                handleChange({\r\n                  target: { name: key, value: e.target.value.split(\",\").map((val) => val.trim()) },\r\n                })\r\n              }\r\n            />\r\n          </label>\r\n        );\r\n      } else {\r\n        return (\r\n          <label key={key}>\r\n            {key}:\r\n            <input\r\n              type=\"text\"\r\n              name={key}\r\n              value={formData.settings[key] || \"\"}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-settings\">\r\n      <h2>{formName} Settings</h2>\r\n      {renderFormFields()}\r\n      <br />\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormSettings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}