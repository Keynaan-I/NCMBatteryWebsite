{"ast":null,"code":"// size of each circle\nvar radius = 15;\n// color of circle\nvar CircleColor = 'white';\n// color of circle if correct\nvar CorrectCircleColor = 'yellow';\n// size of text inside each circle\nvar TextFont = \"20px Verdana\";\nvar CircleBorderWidth = 2;\n\n// how close to each circle the cursor needs to be\nvar tolerance = 15;\n// width of the pen\nvar pen_width = 2;\n\n// This adjust the height so there is room for the Finished button and the timer\nvar HeightAdj = 400;\n\n//Whether or not to change the color of the circle when response is correct\nvar GiveFeedback = true;\n// How are the circle locations specified?\nvar LocationsAsProportions = true;\nvar ImageCopy_Default = {\n  canvas_width: 400,\n  canvas_height: 400,\n  ShowWelcome: true,\n  ShowThankYou: true,\n  ShowInstructions: true,\n  AskForNotes: false,\n  Image: 'NeckerCube.png',\n  RecordGIF: true\n};\nvar ImageCopy_Smile = {\n  canvas_width: \"400vw\",\n  canvas_height: \"400vh\",\n  ShowWelcome: false,\n  ShowThankYou: false,\n  ShowInstructions: true,\n  AskForNotes: false,\n  Image: 'SmileFace.png',\n  RecordGIF: true\n};\nvar ImageCopy_TwoCircles = {\n  canvas_width: \"400vw\",\n  canvas_height: \"400vh\",\n  ShowWelcome: false,\n  ShowThankYou: false,\n  ShowInstructions: true,\n  AskForNotes: false,\n  Image: 'TwoCircles.png',\n  RecordGIF: true\n};\nvar ImageCopy_CBprotocol = {\n  canvas_width: \"400vw\",\n  canvas_height: \"400vh\",\n  ShowWelcome: true,\n  ShowThankYou: false,\n  ShowInstructions: false,\n  AskForNotes: false,\n  Image: 'NeckerCube.png',\n  RecordGIF: true\n};\nvar ImageCopy_FaCE_Training = {\n  canvas_width: \"400vw\",\n  canvas_height: \"400vh\",\n  ShowWelcome: false,\n  ShowThankYou: false,\n  ShowInstructions: true,\n  AskForNotes: false,\n  Image: 'TwoCircles.png',\n  RecordGIF: true\n};\nvar ImageCopy_FaCE_VerA = {\n  canvas_width: \"400vw\",\n  canvas_height: \"400vh\",\n  ShowWelcome: false,\n  ShowThankYou: false,\n  ShowInstructions: true,\n  AskForNotes: false,\n  Image: 'NeckerCube.png',\n  RecordGIF: true\n};\nvar ImageCopy_FaCE_VerB = {\n  canvas_width: \"400vw\",\n  canvas_height: \"400vh\",\n  ShowWelcome: false,\n  ShowThankYou: false,\n  ShowInstructions: true,\n  AskForNotes: false,\n  Image: 'InverseNeckerCube.png',\n  RecordGIF: true\n};\nadd('ImageCopy_Default', function () {\n  parameters = ImageCopy_Default;\n});\nadd('ImageCopy_Smile', function () {\n  parameters = ImageCopy_Smile;\n});\nadd('ImageCopy_TwoCircles', function () {\n  parameters = ImageCopy_TwoCircles;\n});\nadd('ImageCopy_CBprotocol', function () {\n  parameters = ImageCopy_CBprotocol;\n});\nadd('ImageCopy_FaCE', function () {\n  parameters = ImageCopy_FaCE;\n});\nadd('ImageCopy_FaCE_Training', function () {\n  parameters = ImageCopy_FaCE_Training;\n});\nadd('ImageCopy_FaCE_VerA', function () {\n  parameters = ImageCopy_FaCE_VerA;\n});\nadd('ImageCopy_FaCE_VerB', function () {\n  parameters = ImageCopy_FaCE_VerB;\n});","map":{"version":3,"names":["radius","CircleColor","CorrectCircleColor","TextFont","CircleBorderWidth","tolerance","pen_width","HeightAdj","GiveFeedback","LocationsAsProportions","ImageCopy_Default","canvas_width","canvas_height","ShowWelcome","ShowThankYou","ShowInstructions","AskForNotes","Image","RecordGIF","ImageCopy_Smile","ImageCopy_TwoCircles","ImageCopy_CBprotocol","ImageCopy_FaCE_Training","ImageCopy_FaCE_VerA","ImageCopy_FaCE_VerB","add","parameters","ImageCopy_FaCE"],"sources":["C:/Users/user/Downloads/jatos_win_java/study_assets_root/Custom Website/Website/user-website/src/configFiles/ImageCopy_Setup.js"],"sourcesContent":["// size of each circle\nvar radius = 15;\n// color of circle\nvar CircleColor = 'white'\n// color of circle if correct\nvar CorrectCircleColor = 'yellow'\n// size of text inside each circle\nvar TextFont = \"20px Verdana\";\nvar CircleBorderWidth = 2\n\n\n\n// how close to each circle the cursor needs to be\nvar tolerance = 15;\n// width of the pen\nvar pen_width = 2;\n\n// This adjust the height so there is room for the Finished button and the timer\nvar HeightAdj = 400;\n\n//Whether or not to change the color of the circle when response is correct\nvar GiveFeedback = true;          \n// How are the circle locations specified?\nvar LocationsAsProportions = true;\n\nvar ImageCopy_Default = {\n\tcanvas_width:400,\n\tcanvas_height:400,\n\tShowWelcome: true,\n\tShowThankYou: true,\n\tShowInstructions: true,\n\tAskForNotes: false,\n\tImage: 'NeckerCube.png',\n\tRecordGIF: true,\n}\n\nvar ImageCopy_Smile = {\n\tcanvas_width:\"400vw\",\n\tcanvas_height:\"400vh\",\n\tShowWelcome: false,\n\tShowThankYou: false,\n\tShowInstructions: true,\n\tAskForNotes: false,\n\tImage: 'SmileFace.png',\n\tRecordGIF: true,\n}\n\nvar ImageCopy_TwoCircles = {\n\tcanvas_width:\"400vw\",\n\tcanvas_height:\"400vh\",\n\tShowWelcome: false,\n\tShowThankYou: false,\n\tShowInstructions: true,\n\tAskForNotes: false,\n\tImage: 'TwoCircles.png',\n\tRecordGIF: true,\n}\n\n\nvar ImageCopy_CBprotocol = {\n\tcanvas_width:\"400vw\",\n\tcanvas_height:\"400vh\",\n\tShowWelcome: true,\n\tShowThankYou: false,\n\tShowInstructions: false,\n\tAskForNotes: false,\n\tImage: 'NeckerCube.png',\n\tRecordGIF: true,\n}\n\nvar ImageCopy_FaCE_Training = {\n\tcanvas_width:\"400vw\",\n\tcanvas_height:\"400vh\",\n\tShowWelcome: false,\n\tShowThankYou: false,\n\tShowInstructions: true,\n\tAskForNotes: false,\n\tImage: 'TwoCircles.png',\n\tRecordGIF: true,\n}\n\nvar ImageCopy_FaCE_VerA= {\n\tcanvas_width:\"400vw\",\n\tcanvas_height:\"400vh\",\n\tShowWelcome: false,\n\tShowThankYou: false,\n\tShowInstructions: true,\n\tAskForNotes: false,\n\tImage: 'NeckerCube.png',\n\tRecordGIF: true,\n}\n\nvar ImageCopy_FaCE_VerB= {\n\tcanvas_width:\"400vw\",\n\tcanvas_height:\"400vh\",\n\tShowWelcome: false,\n\tShowThankYou: false,\n\tShowInstructions: true,\n\tAskForNotes: false,\n\tImage: 'InverseNeckerCube.png',\n\tRecordGIF: true,\n}\n\n\nadd('ImageCopy_Default', function(){ parameters = ImageCopy_Default});\nadd('ImageCopy_Smile', function(){ parameters = ImageCopy_Smile});\nadd('ImageCopy_TwoCircles', function(){ parameters = ImageCopy_TwoCircles});\nadd('ImageCopy_CBprotocol', function(){ parameters = ImageCopy_CBprotocol});\nadd('ImageCopy_FaCE', function(){ parameters = ImageCopy_FaCE});\nadd('ImageCopy_FaCE_Training', function(){ parameters = ImageCopy_FaCE_Training});\nadd('ImageCopy_FaCE_VerA', function(){ parameters = ImageCopy_FaCE_VerA});\nadd('ImageCopy_FaCE_VerB', function(){ parameters = ImageCopy_FaCE_VerB});\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}